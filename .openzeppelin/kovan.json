{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xCd73b54765f27259ef65c3eBf10a8196b2821314",
    "txHash": "0x6c0fca1f7a5fe9edaa6d69ee27d9b52b00e58b90cffa2c79e9f3e277b4043ee5",
    "deployTransaction": {
      "hash": "0x6c0fca1f7a5fe9edaa6d69ee27d9b52b00e58b90cffa2c79e9f3e277b4043ee5",
      "type": 2,
      "accessList": [],
      "blockHash": "0x5ab1876cc4394c93057a966291f530bc8b3785720629051c02e3aa82f6132e27",
      "blockNumber": 29530644,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0x2feC26654C090eEB13E5cE9AFD98845cc0b75a27",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x9502f907"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x9502f900"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x9502f908"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 10,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xc68106e3f43eb7e315d854ea8ff3c3b6ba62ea60e2fffc00b1c120be3b3fc97e",
      "s": "0x6033e47a1e0a3efdd4ba754978572ff00a7fb46a7893aa5f48e2050140627158",
      "v": 0,
      "creates": "0xCd73b54765f27259ef65c3eBf10a8196b2821314",
      "raw": "0x02f908132a0a849502f900849502f908830762b48080b907ba608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033c080a0c68106e3f43eb7e315d854ea8ff3c3b6ba62ea60e2fffc00b1c120be3b3fc97ea06033e47a1e0a3efdd4ba754978572ff00a7fb46a7893aa5f48e2050140627158",
      "chainId": 42
    }
  },
  "proxies": [
    {
      "address": "0x0D51Cb4bAc75F70cb294e6c006D5DD1eAc4b6D5A",
      "txHash": "0x368376c58e4867a3986c592071fc31158e30bada9b5fcb04d84c8d58f2c5b964",
      "kind": "transparent"
    },
    {
      "address": "0x90d1297D9c86f29797c28FCddB51d056020dEfC3",
      "txHash": "0x509f043b07e6c10454929c7834a61e9a5a98e2a4b1ea8778c9731fd6ca80b563",
      "kind": "transparent"
    },
    {
      "address": "0xC60D86a61406C24625bE1761489089d5b0C1BAc8",
      "txHash": "0xe7de62180337c9b4b7ab2a252f1ddd7dd7ea41c2f5455605781a1903991be750",
      "kind": "transparent"
    },
    {
      "address": "0x05b340B04Bea6740119A7e181887fb479FfEEaEF",
      "txHash": "0x904028d6d80e532c38abda374c7f61a28201096f97a47328419d3600d61df6b1",
      "kind": "transparent"
    },
    {
      "address": "0x67cABa39b375aAb0615442a8D799bC1aeB59e082",
      "txHash": "0x03f639a012c0ca34b0c607a66dce43501e7df846f67a1c5717bd37a1699c0985",
      "kind": "transparent"
    },
    {
      "address": "0xaBDA68F785Dc76e8556B6cF4f9e4D7CD215BD1dd",
      "txHash": "0x7af83337d8d45e64995d7080a1a29170e11737802ec3cbdef909ace27807ddda",
      "kind": "transparent"
    },
    {
      "address": "0xa59d69290E9a9822F4C5Fe049572A391dA25bb06",
      "txHash": "0x4cc1f9babffdbf926d85821574b6ac1b479a4430c68b33728cc975a476880e95",
      "kind": "transparent"
    },
    {
      "address": "0x116F475371bd5929D84266908D9601db0DBda1c2",
      "txHash": "0xc12fb80ea72118633c5f06e328c8d6f054a1d3ebc43f92496da857ec162f001e",
      "kind": "transparent"
    },
    {
      "address": "0x05E7d9C89eCDfc447c84F01c5EBB6C367c57a0d7",
      "txHash": "0x50568adde899e6d30217233b00a0e320556e17c956f7a397298e194b209d8854",
      "kind": "transparent"
    },
    {
      "address": "0xb068C6b6A7b1EEaC4568E2d0FC37BCfB5dA9Ba5c",
      "txHash": "0x8da82c5b02407327881deda5017c6fdb6b5d3bb8376c3fff1e07c5b0e0c4a299",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f5b7579cf7964ec4741ef47f962c9f903e5c05e4b9ffefb29767f12b0100f8ed": {
      "address": "0x3374822edb84D0645C64fDa075e15D1b3B721247",
      "txHash": "0xbb61e9b6d642aebfe599bfd656e69a7c10de0138271eabcf4988514d7335f178",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "config",
            "type": "t_contract(IConfig)5633",
            "src": "contracts/SatoshiOptions_Charm.sol:75"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "charm",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:78"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "route",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:81"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "seenNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SatoshiOptions_Charm.sol:84"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "DATA_PROVIDER",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:85"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/SatoshiOptions_Charm.sol:88"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_idBalance",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:90"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_nftStore",
            "type": "t_mapping(t_uint256,t_struct(NftData)4947_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:102"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_isStrategy",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SatoshiOptions_Charm.sol:105"
          }
        ],
        "types": {
          "t_contract(IConfig)5633": {
            "label": "contract IConfig"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(NftData)4947_storage)": {
            "label": "mapping(uint256 => struct SatoshiOptions_Charm.NftData)"
          },
          "t_struct(NftData)4947_storage": {
            "label": "struct SatoshiOptions_Charm.NftData",
            "members": [
              {
                "label": "delta",
                "type": "t_int128"
              },
              {
                "label": "createTime",
                "type": "t_uint256"
              },
              {
                "label": "openPrice",
                "type": "t_int128"
              },
              {
                "label": "direction",
                "type": "t_bool"
              },
              {
                "label": "bk",
                "type": "t_int128"
              },
              {
                "label": "K",
                "type": "t_int128"
              },
              {
                "label": "strategy",
                "type": "t_address"
              },
              {
                "label": "tradeToken",
                "type": "t_address"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4aecd7d3a9b4ffa089a4ebb2f85973ab2ebb699666b7f3d8640ac788c5f7deae": {
      "address": "0x73E9C2714950282674A90C8D8Bf6bE8914Fc8889",
      "txHash": "0x16b16eba7f13b5ee9b52b2f972e6ca0a490cf66a497e3c7ba1c3c68d00b1843d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "config",
            "type": "t_contract(IConfig)6011",
            "src": "contracts/SatoshiOptions_Charm.sol:75"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "charm",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:78"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "route",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:81"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "seenNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SatoshiOptions_Charm.sol:84"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "DATA_PROVIDER",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:85"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/SatoshiOptions_Charm.sol:88"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_idBalance",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:90"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_nftStore",
            "type": "t_mapping(t_uint256,t_struct(NftData)5280_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:102"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_isStrategy",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SatoshiOptions_Charm.sol:105"
          }
        ],
        "types": {
          "t_contract(IConfig)6011": {
            "label": "contract IConfig"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(NftData)5280_storage)": {
            "label": "mapping(uint256 => struct SatoshiOptions_Charm.NftData)"
          },
          "t_struct(NftData)5280_storage": {
            "label": "struct SatoshiOptions_Charm.NftData",
            "members": [
              {
                "label": "delta",
                "type": "t_int128"
              },
              {
                "label": "createTime",
                "type": "t_uint256"
              },
              {
                "label": "openPrice",
                "type": "t_int128"
              },
              {
                "label": "direction",
                "type": "t_bool"
              },
              {
                "label": "bk",
                "type": "t_int128"
              },
              {
                "label": "K",
                "type": "t_int128"
              },
              {
                "label": "strategy",
                "type": "t_address"
              },
              {
                "label": "tradeToken",
                "type": "t_address"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2a75fa6e02c916d2c9861bfca1af8bb652365a8a8fd70b856fc75c6458aec662": {
      "address": "0xEe0028a590F4Ff3B3e6D4b605d990Be29fe8927c",
      "txHash": "0x166fabdc9619dcc1cad4a781bf9ab67ee372e2c4eeebbbb6cfad15072aab7eda",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "config",
            "type": "t_contract(IConfig)6018",
            "src": "contracts/SatoshiOptions_Charm.sol:75"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "charm",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:78"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "route",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:81"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "seenNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SatoshiOptions_Charm.sol:84"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "DATA_PROVIDER",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:85"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/SatoshiOptions_Charm.sol:88"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_idBalance",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:90"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_nftStore",
            "type": "t_mapping(t_uint256,t_struct(NftData)5285_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:102"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_isStrategy",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SatoshiOptions_Charm.sol:105"
          }
        ],
        "types": {
          "t_contract(IConfig)6018": {
            "label": "contract IConfig"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(NftData)5285_storage)": {
            "label": "mapping(uint256 => struct SatoshiOptions_Charm.NftData)"
          },
          "t_struct(NftData)5285_storage": {
            "label": "struct SatoshiOptions_Charm.NftData",
            "members": [
              {
                "label": "delta",
                "type": "t_int128"
              },
              {
                "label": "createTime",
                "type": "t_uint256"
              },
              {
                "label": "openPrice",
                "type": "t_int128"
              },
              {
                "label": "direction",
                "type": "t_bool"
              },
              {
                "label": "bk",
                "type": "t_int128"
              },
              {
                "label": "K",
                "type": "t_int128"
              },
              {
                "label": "strategy",
                "type": "t_address"
              },
              {
                "label": "tradeToken",
                "type": "t_address"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "984b1bbf3e3661bf1b83d9716ef9bf1d299230ab5b6608be24979eab59903e86": {
      "address": "0x73F19368cA258c82Efc62F372746B75588A677E8",
      "txHash": "0x17c9e9a96db7f9498a5743a28d38625ed86a2c919146a24dfc0433cbe2fa526b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "config",
            "type": "t_contract(IConfig)6014",
            "src": "contracts/SatoshiOptions_Charm.sol:75"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "charm",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:78"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "route",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:81"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "seenNonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SatoshiOptions_Charm.sol:84"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "DATA_PROVIDER",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:85"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/SatoshiOptions_Charm.sol:88"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_idBalance",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:90"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_nftStore",
            "type": "t_mapping(t_uint256,t_struct(NftData)5284_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:102"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_isStrategy",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SatoshiOptions_Charm.sol:105"
          }
        ],
        "types": {
          "t_contract(IConfig)6014": {
            "label": "contract IConfig"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(NftData)5284_storage)": {
            "label": "mapping(uint256 => struct SatoshiOptions_Charm.NftData)"
          },
          "t_struct(NftData)5284_storage": {
            "label": "struct SatoshiOptions_Charm.NftData",
            "members": [
              {
                "label": "delta",
                "type": "t_int128"
              },
              {
                "label": "createTime",
                "type": "t_uint256"
              },
              {
                "label": "openPrice",
                "type": "t_int128"
              },
              {
                "label": "direction",
                "type": "t_bool"
              },
              {
                "label": "bk",
                "type": "t_int128"
              },
              {
                "label": "K",
                "type": "t_int128"
              },
              {
                "label": "strategy",
                "type": "t_address"
              },
              {
                "label": "tradeToken",
                "type": "t_address"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4a90ad8916f9f354465089e959dee2e9f5f50db01a50b14f8207d553c5728416": {
      "address": "0xeeFc3b41758b1F7BCbef4B30eDB879bAA1393039",
      "txHash": "0x7dd588bdce8b11ffcbc3991240d9d2509aee79cce87eb92414891fd79b1e76c4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "config",
            "type": "t_contract(IConfig)6018",
            "src": "contracts/SatoshiOptions_Charm.sol:75"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "charm",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:78"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "route",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:81"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "seenNonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SatoshiOptions_Charm.sol:84"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "DATA_PROVIDER",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:85"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/SatoshiOptions_Charm.sol:88"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_idBalance",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:90"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_nftStore",
            "type": "t_mapping(t_uint256,t_struct(NftData)5286_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:102"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_isStrategy",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SatoshiOptions_Charm.sol:105"
          }
        ],
        "types": {
          "t_contract(IConfig)6018": {
            "label": "contract IConfig"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(NftData)5286_storage)": {
            "label": "mapping(uint256 => struct SatoshiOptions_Charm.NftData)"
          },
          "t_struct(NftData)5286_storage": {
            "label": "struct SatoshiOptions_Charm.NftData",
            "members": [
              {
                "label": "delta",
                "type": "t_int128"
              },
              {
                "label": "createTime",
                "type": "t_uint256"
              },
              {
                "label": "openPrice",
                "type": "t_int128"
              },
              {
                "label": "direction",
                "type": "t_bool"
              },
              {
                "label": "bk",
                "type": "t_int128"
              },
              {
                "label": "K",
                "type": "t_int128"
              },
              {
                "label": "strategy",
                "type": "t_address"
              },
              {
                "label": "tradeToken",
                "type": "t_address"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "71c4f734dbaa410141bfa37f706218204afd33712230d91056becd0672d15baf": {
      "address": "0x356484b8A6ddFfb2FF20F9683b8E4AE70bCcFD59",
      "txHash": "0x38b1724260c5d80ad278c0b1580021c476c6511e2de9015c522bdd2adcbccc35",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "config",
            "type": "t_contract(IConfig)6020",
            "src": "contracts/SatoshiOptions_Charm.sol:75"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "charm",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:78"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "route",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:81"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "seenNonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SatoshiOptions_Charm.sol:84"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "DATA_PROVIDER",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:85"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/SatoshiOptions_Charm.sol:88"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_idBalance",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:90"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_nftStore",
            "type": "t_mapping(t_uint256,t_struct(NftData)5286_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:102"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_isStrategy",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SatoshiOptions_Charm.sol:105"
          }
        ],
        "types": {
          "t_contract(IConfig)6020": {
            "label": "contract IConfig"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(NftData)5286_storage)": {
            "label": "mapping(uint256 => struct SatoshiOptions_Charm.NftData)"
          },
          "t_struct(NftData)5286_storage": {
            "label": "struct SatoshiOptions_Charm.NftData",
            "members": [
              {
                "label": "delta",
                "type": "t_int128"
              },
              {
                "label": "createTime",
                "type": "t_uint256"
              },
              {
                "label": "openPrice",
                "type": "t_int128"
              },
              {
                "label": "direction",
                "type": "t_bool"
              },
              {
                "label": "bk",
                "type": "t_int128"
              },
              {
                "label": "K",
                "type": "t_int128"
              },
              {
                "label": "strategy",
                "type": "t_address"
              },
              {
                "label": "tradeToken",
                "type": "t_address"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "34ef7acc145876bfcb4e3c788ce91620acdbc45d2464d1efdde1d360b98c843b": {
      "address": "0xc35DcEaCf2227524aB2aa1623E175262132b6Bb9",
      "txHash": "0x02921a0484c898a35fb8c9db95f137dc56ad16838bb3b63799fad9715a8214f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "config",
            "type": "t_contract(IConfig)6100",
            "src": "contracts/SatoshiOptions_Charm.sol:75"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "charm",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:78"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "route",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:81"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "seenNonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SatoshiOptions_Charm.sol:84"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "DATA_PROVIDER",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:85"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/SatoshiOptions_Charm.sol:88"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_idBalance",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:90"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_nftStore",
            "type": "t_mapping(t_uint256,t_struct(NftData)5363_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:102"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_isStrategy",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SatoshiOptions_Charm.sol:105"
          }
        ],
        "types": {
          "t_contract(IConfig)6100": {
            "label": "contract IConfig"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(NftData)5363_storage)": {
            "label": "mapping(uint256 => struct SatoshiOptions_Charm.NftData)"
          },
          "t_struct(NftData)5363_storage": {
            "label": "struct SatoshiOptions_Charm.NftData",
            "members": [
              {
                "label": "delta",
                "type": "t_int128"
              },
              {
                "label": "createTime",
                "type": "t_uint256"
              },
              {
                "label": "openPrice",
                "type": "t_int128"
              },
              {
                "label": "direction",
                "type": "t_bool"
              },
              {
                "label": "bk",
                "type": "t_int128"
              },
              {
                "label": "K",
                "type": "t_int128"
              },
              {
                "label": "strategy",
                "type": "t_address"
              },
              {
                "label": "tradeToken",
                "type": "t_address"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f24b3e322e1dfcdc9ff74c37c625486ad89677eef0017f2074038480e9834d0c": {
      "address": "0xD749e8CBe2aB61Fb265E964dBF9f47Ba43E2E545",
      "txHash": "0xb8fcf84f82dd60f22f08356a49e6fc6ac4c1c8b7e70a17b1351d27ef447892d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "config",
            "type": "t_contract(IConfig)6097",
            "src": "contracts/SatoshiOptions_Charm.sol:75"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "charm",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:78"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "route",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:81"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "seenNonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SatoshiOptions_Charm.sol:84"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "DATA_PROVIDER",
            "type": "t_address",
            "src": "contracts/SatoshiOptions_Charm.sol:85"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/SatoshiOptions_Charm.sol:88"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_idBalance",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:90"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_nftStore",
            "type": "t_mapping(t_uint256,t_struct(NftData)5363_storage)",
            "src": "contracts/SatoshiOptions_Charm.sol:102"
          },
          {
            "contract": "SatoshiOptions_Charm",
            "label": "_isStrategy",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SatoshiOptions_Charm.sol:105"
          }
        ],
        "types": {
          "t_contract(IConfig)6097": {
            "label": "contract IConfig"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(NftData)5363_storage)": {
            "label": "mapping(uint256 => struct SatoshiOptions_Charm.NftData)"
          },
          "t_struct(NftData)5363_storage": {
            "label": "struct SatoshiOptions_Charm.NftData",
            "members": [
              {
                "label": "delta",
                "type": "t_int128"
              },
              {
                "label": "createTime",
                "type": "t_uint256"
              },
              {
                "label": "openPrice",
                "type": "t_int128"
              },
              {
                "label": "direction",
                "type": "t_bool"
              },
              {
                "label": "bk",
                "type": "t_int128"
              },
              {
                "label": "K",
                "type": "t_int128"
              },
              {
                "label": "strategy",
                "type": "t_address"
              },
              {
                "label": "tradeToken",
                "type": "t_address"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
